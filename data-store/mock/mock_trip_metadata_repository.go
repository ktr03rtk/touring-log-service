// Code generated by MockGen. DO NOT EDIT.
// Source: trip_metadata_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/ktr03rtk/touring-log-service/data-store/domain/model"
)

// MockTripMetadataRepository is a mock of TripMetadataRepository interface.
type MockTripMetadataRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTripMetadataRepositoryMockRecorder
}

// MockTripMetadataRepositoryMockRecorder is the mock recorder for MockTripMetadataRepository.
type MockTripMetadataRepositoryMockRecorder struct {
	mock *MockTripMetadataRepository
}

// NewMockTripMetadataRepository creates a new mock instance.
func NewMockTripMetadataRepository(ctrl *gomock.Controller) *MockTripMetadataRepository {
	mock := &MockTripMetadataRepository{ctrl: ctrl}
	mock.recorder = &MockTripMetadataRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTripMetadataRepository) EXPECT() *MockTripMetadataRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTripMetadataRepository) Create(arg0 *model.Trip) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockTripMetadataRepositoryMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTripMetadataRepository)(nil).Create), arg0)
}
