name: Build and push

on:
  workflow_call:
    inputs:
      targetDir:
        required: true
        type: string
      tag:
        required: true
        type: string
    outputs:
      image-ref:
        value: ${{ jobs.build-and-push-image.outputs.image-ref }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-20.04
    env:
      TZ: Asia/Tokyo
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}/${{ inputs.targetDir }}
    outputs:
      image-ref: ${{ steps.output.outputs.ref }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt@sha256:85683def11494bc0055d98dd1081e73cb5e70bbc1ae532be3d12cf054e2b11f1
          platforms: linux/amd64, linux/arm64

      - name: Set up docker
        uses: docker/setup-buildx-action@v1

      - uses: actions/cache@v3
        with:
          path: /tmp/.buildx-${{ inputs.targetDir }}-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build multi architecture images
        uses: docker/build-push-action@v2
        with:
          context: ./${{ inputs.targetDir }}
          platforms: linux/amd64, linux/arm64
          build-args: TZ=${{ env.TZ }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.tag}}
          cache-from: type=local,src=/tmp/.buildx-${{ inputs.targetDir }}-cache
          cache-to: type=local,dest=/tmp/.buildx-${{ inputs.targetDir }}-cache-new,mode=max

      - name: Output image reference
        id: output
        run: echo "::set-output name=ref::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.tag}}"

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-${{ inputs.targetDir }}-cache
          mv /tmp/.buildx-${{ inputs.targetDir }}-cache-new /tmp/.buildx-${{ inputs.targetDir }}-cache
